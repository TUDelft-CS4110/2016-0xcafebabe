#Pham
data = open("ZeusBinary.bin","rb").read()
keydecode("hex")
#KSA Phase
for k in range(0, len(data)-0x102):
	# k=0x22800
	input = data[k:k+0x102]
	S = range(256)
	j = 0
	out = []
	for i in range(256):
	    j = (j + S[i] + ord( key[i % len(key)] )) % 256
	    S[i] , S[j] = S[j] , S[i]
	#PRGA Phase
	i = j = 0
	for char in input:
	    i = ( i + 1 ) % 256
	    j = ( j + S[i] ) % 256
	    S[i] , S[j] = S[j] , S[i]
	    out.append(chr(ord(char) ^ S[(S[i] + S[j]) % 256]))
	if ''.join(out)[0:4] == "DAVE": break
decrypted_text = ''.join(out)
print decrypted_text.encode("hex")
xor_key = data[0x21000:0x21000+len(key)]

l = [ord(a) ^ ord(b) for a,b in zip(key,xor_key)]
config = ''.join(chr(i) for i in l)
url=""
i=0
while 1:
	url += config[0x97+i]
	i+=1
	if config[0x97+i] =="\x00":
		break
print "config url = ", url
print "RC4 communication key = ", config[0x1a4:0x1a4+512].encode("hex")

